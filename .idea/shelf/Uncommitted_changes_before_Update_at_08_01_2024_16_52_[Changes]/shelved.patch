Index: app/src/main/java/com/example/pam/ui/AnimatedSplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pam.ui\r\n\r\nimport androidx.compose.animation.core.animateFloatAsState\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.isSystemInDarkTheme\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.navigation.NavHostController\r\nimport com.example.pam.Navigation.Screen\r\nimport com.example.pam.R\r\nimport com.example.pam.ui.add.DestinasiEntry\r\nimport com.example.pam.ui.theme.Purple80\r\nimport kotlinx.coroutines.delay\r\n\r\n\r\n@Composable\r\nfun AnimatedSplashScreen(navController: NavHostController) {\r\n    var startAnimation by remember { mutableStateOf(false) }\r\n    val alphaAnim = animateFloatAsState(\r\n        targetValue = if (startAnimation) 1f else 0f,\r\n        animationSpec = tween(\r\n            durationMillis = 3000\r\n        )\r\n    )\r\n\r\n    LaunchedEffect(key1 = true) {\r\n        startAnimation = true\r\n        delay(4000)\r\n        navController.popBackStack()\r\n        navController.navigate(DestinasiEntry.route)\r\n    }\r\n    Splash(alpha = alphaAnim.value)\r\n}\r\n\r\n@Composable\r\nfun Splash(alpha: Float) {\r\n    Box(\r\n        modifier = Modifier\r\n            .background(if (isSystemInDarkTheme()) Color.Black else Purple80)\r\n            .fillMaxSize(),\r\n        contentAlignment = Alignment.Center\r\n    ) {\r\n        Image(\r\n            painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = \"image\"\r\n\r\n        )\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/ui/AnimatedSplashScreen.kt b/app/src/main/java/com/example/pam/ui/AnimatedSplashScreen.kt
--- a/app/src/main/java/com/example/pam/ui/AnimatedSplashScreen.kt	(revision 970c8a07b477feeb55bbcda918acf30fda7462b8)
+++ b/app/src/main/java/com/example/pam/ui/AnimatedSplashScreen.kt	(date 1704622365989)
@@ -1,5 +1,6 @@
 package com.example.pam.ui
 
+import android.content.res.Configuration.UI_MODE_NIGHT_YES
 import androidx.compose.animation.core.animateFloatAsState
 import androidx.compose.animation.core.tween
 import androidx.compose.foundation.Image
@@ -17,6 +18,7 @@
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.tooling.preview.Preview
 import androidx.navigation.NavHostController
 import com.example.pam.Navigation.Screen
 import com.example.pam.R
@@ -60,3 +62,14 @@
     }
 }
 
+@Composable
+@Preview
+fun SplashScreenPreview() {
+    Splash(alpha = 1f)
+}
+
+@Composable
+@Preview(uiMode = UI_MODE_NIGHT_YES)
+fun SplashScreenDarkPreview() {
+    Splash(alpha = 1f)
+}
\ No newline at end of file
Index: app/src/main/java/com/example/pam/Navigation/PengelolaHalaman.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pam.Navigation\r\n\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.pam.ui.AnimatedSplashScreen\r\nimport com.example.pam.ui.add.AddScreen\r\nimport com.example.pam.ui.add.DestinasiEntry\r\n\r\n@Composable\r\nfun PengelolaHalaman(navController: NavHostController = rememberNavController()) {\r\n\r\n    NavHost(\r\n        navController = navController,\r\n        startDestination = Screen.Splash.route,\r\n        modifier = Modifier\r\n    ) {\r\n        composable(route = Screen.Splash.route) {\r\n            AnimatedSplashScreen(navController = navController)\r\n        }\r\n        composable(route = Screen.Home.route) {\r\n            Box(modifier = Modifier.fillMaxSize())\r\n        }\r\n        composable(DestinasiEntry.route) {\r\n            AddScreen(navigateBack = {\r\n                navController.popBackStack()\r\n            })\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/Navigation/PengelolaHalaman.kt b/app/src/main/java/com/example/pam/Navigation/PengelolaHalaman.kt
--- a/app/src/main/java/com/example/pam/Navigation/PengelolaHalaman.kt	(revision 970c8a07b477feeb55bbcda918acf30fda7462b8)
+++ b/app/src/main/java/com/example/pam/Navigation/PengelolaHalaman.kt	(date 1704627620085)
@@ -5,12 +5,18 @@
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Modifier
 import androidx.navigation.NavHostController
+import androidx.navigation.NavType
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.composable
 import androidx.navigation.compose.rememberNavController
+import androidx.navigation.navArgument
 import com.example.pam.ui.AnimatedSplashScreen
+import com.example.pam.ui.Edit.EditDestination
+import com.example.pam.ui.Edit.EditScreen
 import com.example.pam.ui.add.AddScreen
 import com.example.pam.ui.add.DestinasiEntry
+import com.example.pam.ui.detail.DetailDestination
+import com.example.pam.ui.detail.DetailScreen
 
 @Composable
 fun PengelolaHalaman(navController: NavHostController = rememberNavController()) {
@@ -31,5 +37,36 @@
                 navController.popBackStack()
             })
         }
+        composable(
+            route = DetailDestination.routeWithArgs,
+            arguments = listOf(navArgument(DetailDestination.AdminId) {
+                type = NavType.StringType
+            })
+        ) { backStackEntry ->
+            val adminId = backStackEntry.arguments?.getString(DetailDestination.AdminId)
+            adminId?.let {
+                DetailScreen(
+                    navigateBack = { navController.popBackStack() },
+                    navigateToEditItem = {
+                        navController.navigate("${EditDestination.route}/$adminId")
+                        println("adminId: $adminId")
+                    }
+                )
+            }
+        }
+        composable(
+            route = EditDestination.routeWithArgs,
+            arguments = listOf(navArgument(EditDestination.adminId) {
+                type = NavType.StringType
+            })
+        ) { backStackEntry ->
+            val adminId = backStackEntry.arguments?.getString(EditDestination.adminId)
+            adminId?.let {
+                EditScreen(
+                    navigateBack = { navController.popBackStack() },
+                    onNavigateUp = { navController.navigateUp() }
+                )
+            }
+        }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/pam/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pam\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.pam.Navigation.PengelolaHalaman\r\n\r\nimport com.example.pam.ui.theme.PAMTheme\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            PAMTheme {\r\n                PengelolaHalaman()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun Greeting(name: String, modifier: Modifier = Modifier) {\r\n    Text(\r\n        text = \"Hello $name!\",\r\n        modifier = modifier\r\n    )\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun GreetingPreview() {\r\n    PAMTheme {\r\n        PengelolaHalaman()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/MainActivity.kt b/app/src/main/java/com/example/pam/MainActivity.kt
--- a/app/src/main/java/com/example/pam/MainActivity.kt	(revision 970c8a07b477feeb55bbcda918acf30fda7462b8)
+++ b/app/src/main/java/com/example/pam/MainActivity.kt	(date 1704692536640)
@@ -3,13 +3,15 @@
 import android.os.Bundle
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Surface
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.navigation.compose.rememberNavController
-import com.example.pam.Navigation.PengelolaHalaman
-
+import com.example.pam.Navigation.SetupNavGraph
 import com.example.pam.ui.theme.PAMTheme
 
 class MainActivity : ComponentActivity() {
@@ -17,12 +19,12 @@
         super.onCreate(savedInstanceState)
         setContent {
             PAMTheme {
-                PengelolaHalaman()
+                val navController = rememberNavController()
+                SetupNavGraph(navController = navController)
             }
         }
     }
 }
-
 @Composable
 fun Greeting(name: String, modifier: Modifier = Modifier) {
     Text(
@@ -35,6 +37,6 @@
 @Composable
 fun GreetingPreview() {
     PAMTheme {
-        PengelolaHalaman()
+
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/pam/Model/Admin.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pam.Model\r\n\r\ndata class Admin(\r\n    val id: String,\r\n    val nama: String,\r\n    val password: String\r\n){\r\n    constructor(): this(\"\",\"\",\"\",)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/Model/Admin.kt b/app/src/main/java/com/example/pam/Model/Admin.kt
--- a/app/src/main/java/com/example/pam/Model/Admin.kt	(revision 970c8a07b477feeb55bbcda918acf30fda7462b8)
+++ b/app/src/main/java/com/example/pam/Model/Admin.kt	(date 1704700252579)
@@ -6,4 +6,24 @@
     val password: String
 ){
     constructor(): this("","","",)
+}
+data class makanan(
+    val id: String,
+    val namamkn: String,
+    val harga: String,
+    val jenis: String
+){
+    constructor(): this("","","","")
+}
+
+data class struck(
+    val id: String,
+    val nama: String,
+    val password: String,
+    val namamkn: String,
+    val harga: String,
+    val jenis: String
+){
+    constructor(): this("","","","","","",)
+
 }
\ No newline at end of file
Index: app/src/main/java/com/example/pam/ui/Edit/EditViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/ui/Edit/EditViewModel.kt b/app/src/main/java/com/example/pam/ui/Edit/EditViewModel.kt
new file mode 100644
--- /dev/null	(date 1704627665697)
+++ b/app/src/main/java/com/example/pam/ui/Edit/EditViewModel.kt	(date 1704627665697)
@@ -0,0 +1,46 @@
+package com.example.pam.ui.Edit
+
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.setValue
+import androidx.lifecycle.SavedStateHandle
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.example.pam.data.AdminRepository
+import com.example.pam.ui.AddEvent
+import com.example.pam.ui.AddUIState
+import com.example.pam.ui.toAdmin
+import com.example.pam.ui.toUIStateAdmin
+import kotlinx.coroutines.flow.filterNotNull
+import kotlinx.coroutines.flow.first
+import kotlinx.coroutines.launch
+
+class EditViewModel(
+    savedStateHandle: SavedStateHandle,
+    private val repository: AdminRepository
+) : ViewModel() {
+
+    var adminUiState by mutableStateOf(AddUIState())
+        private set
+
+    private val kontakId: String = checkNotNull(savedStateHandle[EditDestination.adminId])
+
+    init {
+        viewModelScope.launch {
+            adminUiState =
+                repository.getAdminById(kontakId)
+                    .filterNotNull()
+                    .first()
+                    .toUIStateAdmin()
+        }
+    }
+
+    fun updateUIState(addEvent: AddEvent) {
+        adminUiState = adminUiState.copy(addEvent = addEvent)
+    }
+
+    suspend fun updateKontak() {
+        repository.update(adminUiState.addEvent.toAdmin())
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/pam/ui/halaman/HalamanHome.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/ui/halaman/HalamanHome.kt b/app/src/main/java/com/example/pam/ui/halaman/HalamanHome.kt
new file mode 100644
--- /dev/null	(date 1704707505479)
+++ b/app/src/main/java/com/example/pam/ui/halaman/HalamanHome.kt	(date 1704707505479)
@@ -0,0 +1,104 @@
+package com.example.pam.ui.halaman
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.isSystemInDarkTheme
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.IntrinsicSize
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.material3.Button
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.layout.ContentScale
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import com.example.pam.R
+import com.example.pam.ui.theme.PAMTheme
+import com.example.pam.ui.theme.Purple80
+
+@Composable
+fun HalamanHome(oneNextButtonClicked: () -> Unit) {
+    val image = painterResource(id = R.drawable.sendokgarpu)
+    Column(
+        modifier = Modifier
+            .fillMaxSize()
+            .background(if (isSystemInDarkTheme()) Color.Black else Purple80),
+
+    ) {
+        Box(
+            modifier = Modifier
+                .weight(1f)
+                .padding(5.dp)
+
+        ) {
+            Column(
+                horizontalAlignment = Alignment.CenterHorizontally,
+                modifier = Modifier.fillMaxSize(),
+                verticalArrangement = Arrangement.Center
+            ) {
+                Image(
+                    painter = image,
+                    contentDescription = null,
+                    contentScale = ContentScale.Crop,
+                    modifier = Modifier
+                        .size(400.dp)
+                        .padding(12.dp),
+
+
+                )
+                Text(
+                    text = "nama pelanggan",
+                    color = Color.DarkGray,
+                    fontSize = 35.sp,
+                    modifier = Modifier.padding(12.dp)
+                )
+                Text(
+                    text = "Nomer meja",
+                    color = Color.DarkGray,
+                    fontSize = 35.sp,
+                    modifier = Modifier.padding(12.dp)
+                )
+            }
+        }
+        Row(
+            modifier = Modifier
+                .fillMaxWidth()
+                .padding(vertical = 16.dp)
+                .height(IntrinsicSize.Min),
+            horizontalArrangement = Arrangement.spacedBy(16.dp),
+            verticalAlignment = Alignment.Bottom
+        ) {
+            Button(
+                modifier = Modifier.weight(1f),
+                onClick = oneNextButtonClicked
+            ) {
+                Text(text = "Pilih Menu")
+            }
+        }
+    }
+}
+
+
+
+@Preview(showBackground = true)
+@Composable
+fun PreviewHalamanHome(){
+    PAMTheme {
+        HalamanHome (oneNextButtonClicked = {})
+    }
+}
+
+
+
Index: app/src/main/java/com/example/pam/LoginPage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import android.widget.Toast\r\nimport androidx.compose.foundation.BorderStroke\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.OutlinedButton\r\nimport androidx.compose.material3.OutlinedCard\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.Color.Companion.Black\r\nimport androidx.compose.ui.graphics.Color.Companion.White\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavController\r\nimport com.example.pam.R\r\nimport com.google.firebase.auth.FirebaseAuth\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun LoginPage(navController: NavController) {\r\n\r\n    val auth = FirebaseAuth.getInstance()\r\n    val context = LocalContext.current\r\n    var email by remember { mutableStateOf(\"\") }\r\n    var password by remember { mutableStateOf(\"\") }\r\n\r\n\r\n    Box(modifier = Modifier.fillMaxSize()) {\r\n        Image(\r\n            painter = painterResource(R.drawable.background),\r\n            contentDescription = null,\r\n            modifier = Modifier.fillMaxSize(),\r\n            alignment = Alignment.TopStart,\r\n            contentScale = ContentScale.FillBounds\r\n        )\r\n\r\n        Image(\r\n            painter = painterResource(R.drawable.background2),\r\n            contentDescription = null,\r\n            modifier = Modifier.fillMaxSize(),\r\n            alignment = Alignment.TopStart,\r\n        )\r\n\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize(),\r\n            verticalArrangement = Arrangement.Bottom,\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            OutlinedCard(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(330.dp),\r\n                shape = RoundedCornerShape(topEnd = 50.dp, topStart = 50.dp),\r\n                colors = CardDefaults.outlinedCardColors(\r\n                    containerColor = Color(0xFFF2A297),\r\n                ),\r\n                border = BorderStroke(1.dp, Color.Black)\r\n            ) {\r\n                Column(modifier = Modifier.padding(20.dp)) {\r\n                    OutlinedTextField(\r\n                        value = email,\r\n                        onValueChange = { email = it }, Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(vertical = 8.dp)\r\n                            .height(70.dp)\r\n                            .align(Alignment.CenterHorizontally),\r\n                        label = { Text(\"Email\") },\r\n                        shape = RoundedCornerShape(20.dp),\r\n                    )\r\n                    OutlinedTextField(\r\n                        value = password,\r\n                        onValueChange = { password = it },\r\n                        Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(vertical = 8.dp)\r\n                            .height(70.dp)\r\n                            .align(Alignment.CenterHorizontally),\r\n                        label = { Text(\"Password\") },\r\n                        shape = RoundedCornerShape(20.dp),\r\n\r\n                        )\r\n                    Spacer(modifier = Modifier.height(40.dp))\r\n                    OutlinedButton(\r\n                        onClick = {\r\n                            performLogin(\r\n                                context,\r\n                                auth,\r\n                                email,\r\n                                password,\r\n                                navController\r\n                            )\r\n                        },\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .height(70.dp),\r\n                        shape = RoundedCornerShape(20.dp),\r\n                        colors = ButtonDefaults.outlinedButtonColors(\r\n                            contentColor = White,\r\n                            containerColor = Color(0xFFADD6B8)\r\n                        ),\r\n                        border = BorderStroke(1.dp, Color.Black)\r\n                    ) {\r\n                        Text(\r\n                            \"Sign In\",\r\n                            style = TextStyle(\r\n                                color = Black,\r\n                                fontSize = 20.sp,\r\n                                fontWeight = FontWeight.Bold,\r\n                                fontFamily = FontFamily.SansSerif\r\n                            )\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nprivate fun performLogin(\r\n    context: android.content.Context,\r\n    auth: FirebaseAuth,\r\n    email: String,\r\n    password: String,\r\n    navController: NavController\r\n) {\r\n    auth.signInWithEmailAndPassword(email, password)\r\n        .addOnCompleteListener { task ->\r\n            if (task.isSuccessful) {\r\n                navController.navigate(\"MainPage\")\r\n                Toast.makeText(context, \"Login success\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                Toast.makeText(context, \"Login failed\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/LoginPage.kt b/app/src/main/java/com/example/pam/LoginPage.kt
--- a/app/src/main/java/com/example/pam/LoginPage.kt	(revision 970c8a07b477feeb55bbcda918acf30fda7462b8)
+++ b/app/src/main/java/com/example/pam/LoginPage.kt	(date 1704625405850)
@@ -39,6 +39,7 @@
 import com.example.pam.R
 import com.google.firebase.auth.FirebaseAuth
 
+
 @OptIn(ExperimentalMaterial3Api::class)
 @Composable
 fun LoginPage(navController: NavController) {
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id(\"com.android.application\")\r\n    id(\"org.jetbrains.kotlin.android\")\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.pam\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.pam\"\r\n        minSdk = 24\r\n        targetSdk = 33\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.4.3\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(\"androidx.core:core-ktx:1.9.0\")\r\n    implementation(\"androidx.lifecycle:lifecycle-runtime-ktx:2.6.2\")\r\n    implementation(\"androidx.activity:activity-compose:1.8.2\")\r\n    implementation(platform(\"androidx.compose:compose-bom:2023.03.00\"))\r\n    implementation(\"androidx.compose.ui:ui\")\r\n    implementation(\"androidx.compose.ui:ui-graphics\")\r\n    implementation(\"androidx.compose.ui:ui-tooling-preview\")\r\n    implementation(\"androidx.compose.material3:material3\")\r\n    implementation(\"com.google.firebase:firebase-analytics:21.5.0\")\r\n    implementation(\"com.google.firebase:firebase-firestore:24.10.0\")\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2\")\r\n    implementation(\"androidx.navigation:navigation-compose:2.7.5\")\r\n    implementation(\"com.google.firebase:firebase-auth-ktx:22.3.0\")\r\n    testImplementation(\"junit:junit:4.13.2\")\r\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\r\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\r\n    androidTestImplementation(platform(\"androidx.compose:compose-bom:2023.03.00\"))\r\n    androidTestImplementation(\"androidx.compose.ui:ui-test-junit4\")\r\n    debugImplementation(\"androidx.compose.ui:ui-tooling\")\r\n    debugImplementation(\"androidx.compose.ui:ui-test-manifest\")\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 970c8a07b477feeb55bbcda918acf30fda7462b8)
+++ b/app/build.gradle.kts	(date 1704625405801)
@@ -62,8 +62,7 @@
     implementation("androidx.compose.material3:material3")
     implementation("com.google.firebase:firebase-analytics:21.5.0")
     implementation("com.google.firebase:firebase-firestore:24.10.0")
-    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2")
-    implementation("androidx.navigation:navigation-compose:2.7.5")
+    implementation("com.google.firebase:firebase-database:20.3.0")
     implementation("com.google.firebase:firebase-auth-ktx:22.3.0")
     testImplementation("junit:junit:4.13.2")
     androidTestImplementation("androidx.test.ext:junit:1.1.5")
@@ -72,4 +71,8 @@
     androidTestImplementation("androidx.compose.ui:ui-test-junit4")
     debugImplementation("androidx.compose.ui:ui-tooling")
     debugImplementation("androidx.compose.ui:ui-test-manifest")
-}
\ No newline at end of file
+
+    // Navigation Compose
+    implementation("androidx.navigation:navigation-compose:2.4.0-beta02")
+}
+
Index: app/src/main/res/values/Dimen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/Dimen.xml b/app/src/main/res/values/Dimen.xml
new file mode 100644
--- /dev/null	(date 1699011534813)
+++ b/app/src/main/res/values/Dimen.xml	(date 1699011534813)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="Padding_small">8dp</dimen>
+    <dimen name="Padding_medium">16dp</dimen>
+    <dimen name="Padding_divider">1dp</dimen>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/pam/PenyediaViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/PenyediaViewModel.kt b/app/src/main/java/com/example/pam/PenyediaViewModel.kt
new file mode 100644
--- /dev/null	(date 1704622373704)
+++ b/app/src/main/java/com/example/pam/PenyediaViewModel.kt	(date 1704622373704)
@@ -0,0 +1,2 @@
+package com.example.pam
+
Index: app/src/main/java/com/example/pam/ui/Edit/EditScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pam/ui/Edit/EditScreen.kt b/app/src/main/java/com/example/pam/ui/Edit/EditScreen.kt
new file mode 100644
--- /dev/null	(date 1704627620102)
+++ b/app/src/main/java/com/example/pam/ui/Edit/EditScreen.kt	(date 1704627620102)
@@ -0,0 +1,58 @@
+package com.example.pam.ui.Edit
+
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.rememberScrollState
+import androidx.compose.foundation.verticalScroll
+import androidx.compose.material3.ExperimentalMaterial3Api
+import androidx.compose.material3.Scaffold
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.rememberCoroutineScope
+import androidx.compose.ui.Modifier
+import androidx.lifecycle.viewmodel.compose.viewModel
+import com.example.pam.Navigation.DestinasiNavigasi
+import com.example.pam.ui.PenyediaViewModel
+import com.example.pam.ui.RegisterTopAppBar
+import com.example.pam.ui.add.EntryBody
+import kotlinx.coroutines.launch
+
+object EditDestination : DestinasiNavigasi {
+    override val route = "item_edit"
+    override val titleRes ="Edit Admin"
+    const val adminId = "itemId"
+    val routeWithArgs = "${EditDestination.route}/{$adminId}"
+}
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun EditScreen(
+    navigateBack: () -> Unit,
+    onNavigateUp: () -> Unit,
+    modifier: Modifier = Modifier,
+    viewModel: EditViewModel = viewModel(factory = PenyediaViewModel.Factory)
+) {
+    val coroutineScope = rememberCoroutineScope()
+    Scaffold(
+        topBar = {
+            RegisterTopAppBar( title =EditDestination.titleRes,
+                canNavigateBack = true,
+                navigateUp = onNavigateUp )
+        },
+        modifier = modifier
+    ) { innerPadding ->
+        EntryBody(
+            addUIState = viewModel.adminUiState,
+            onSiswaValueChange = viewModel::updateUIState,
+            onSaveClick = {
+                coroutineScope.launch {
+                    viewModel.updateKontak()
+                    navigateBack()
+                }
+            },
+            modifier = Modifier
+                .padding(innerPadding)
+                .verticalScroll(rememberScrollState())
+                .fillMaxWidth()
+        )
+    }
+}
\ No newline at end of file
